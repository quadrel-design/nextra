diff --git a/dist/rollup.js b/dist/rollup.js
index 0f6400eedfad49091ca952ee5863bd027e3b8417..3de435d6263c0588b3dd4e9f5dada35670b6f2e4 100644
--- a/dist/rollup.js
+++ b/dist/rollup.js
@@ -1,6 +1,7 @@
 "use strict"; function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }
 
 
+const alias = require('@rollup/plugin-alias');
 
 
 
@@ -7929,6 +7930,10 @@ var getRollupConfig = async (options) => {
         (0, import_rollup_plugin_hashbang.default)(),
         json(),
         ignoreFiles,
+        // https://stackoverflow.com/a/72679927
+        alias({
+          entries: [{ find: /^.*\.svg$/, replacement: 'src/icon.d.ts' }]
+        }),
         dtsPlugin.default({
           tsconfig: options.tsconfig,
           compilerOptions: {
